#include <stdio.h>
#include <stdlib.h>
#include <string.h>



struct bst{
    int data;
    struct bst* left;
    struct bst* right;

};

// creates a new mid note
bst newnodes(int new)
{
    struct bst* head = (struct bst*)malloc(sizeof(struct bst));
    head->data = new;
    head->left = NULL;
    head->right = NULL;
}


//sorting algos
bst* sorttree(int array[], int st, int end)
{
   if(st > end)
   {
    return NULL;
   }
   int mid = (st+end)/2;
   struct bst* head = newnodes(array[mid])

   head->left = sorttree(array[],st, mid-1)
   head->right = sorttree(array[],mid+1, end)

   return head;

}

void preOrder(bst* node)
{
    if (node == NULL)
        return;
    cout << node->data << " ";
    preOrder(node->left);
    preOrder(node->right);
}


int main()
{

int a[6]= {1,3,2,4,7,6};
int n = sizeof(a)/sizeof(a[0]);
sorttree(a,0,n-1)
cout << "PreOrder Traversal of constructed BST \n";
preOrder(head);
 
return 0;
}


