#include <stdio.h>
#include <stdlib.h>
#include <string.h>


void print(int array[], int n)
{   int p; 
    while(p!=n)
    {
        printf("%d/n",array[p]);
        p++;
    }
}


void swapout( int* x,  int* y )
{ 
    int holder = *x;
    *x = *y
    *y = holder;

}

int pivot(int* a, int start, int stop)
{
    int piv = a[(start + stop)/n];
    int temp = (start-1);
    int it = start;
    while(it<=stop-1)
    {
       if(a[it]<piv)
       {
         swapout(&a[it],&a[temp])
         temp++;
       }
       it++;
    }
    swapout(&a[(start + stop)/n],&a[temp+1]);
    return(temp+1);//pivot returned in the middle
}


void quick(int* a, int start, int stop)
{ 
    if(start<stop)
    {
        int piv;
        piv = pivot(a,  start, stop);
        quick(a,start,piv-1);
        quick(a,piv-1,stop);
    }

}


void insertion(int a[], int n)
{
    int i=1;
    int j;
    int temp;
    while(i<n)
    {
      temp = a[i];
      j = i- 1;


        while(j>=0 && a[j]>temp)
        {
            a[j+1]=a[j];
            j=j-1;
        }
     a[j+1]=temp;
     i++;
    }
     
}










int main()
{

int a[6]= {1,3,2,4,7,6};
int n = sizeof(a)/sizeof(a[0]);
quick(a,0,n);
 int p=0; 
    while(p!=n)
    {
        printf("%d",a[p]);
        p++;
    }

 return 0;

}

